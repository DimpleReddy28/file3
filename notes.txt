Operators:-
**************
- Operators is a special type of symbols used to perform some operations on operands.
ex - 10(operand1) +(operator) 20(operand2)

- unary
- binary
- ternary(operand1 ? operand2 : operand3)

1.arithmatic Operators
2.assignment operator
3.relational operator
4.logical operator

1.arithmatic Operators:-
- addition
- substraction
- multiplication
- division
- modulus
- expoenentail
- increment(++) :- increment will happen with one value
    - pre-increment :- increment before execution
    - post-increment :- increment after execution
- decrement(--) :- decrmenrted by 1
    - pre-decrement
    - post-decrement

concatenation :- adding two or more strings.
typecasting :- converting one datatype into another datatype.
NaN :- Not a Number :- 

2.assignment operator:-
- = , += , -= , *= ,/= , %= , **=

3.relational operator
- which are used to compare two values.
- == , === , != , !== , > , >= , < , <=
- returns always a boolean.
what is the difference between "==" and "==="?
-"==" - it will check only values not a data type.
-"===" - it will check both values and data types.
- "!=" - similar to == it will check only values not a data types
- "!==" - checks both value and data types.

4.Logical operators:-
AND(&&)- when both sides condition is true then it will return true else false.
OR(||) :- when both side is true or any one side is true it will return true else false.
NOT(!):- if true it becomes false and vice-versa. 

Decision making statments:-
****************************
-if:- it will work for true statments
- if else
- else if ladder
-switch
- ternary

prompt():- this method is used to collect the data from the users.

functions:-
************
- function is a block of code used to execute specific task assigned to it.
- function is a non-primitive data type.
- functions can be reusable.

syntax :-    function function_name(optional parameters){// function decalration
                    //statements
                    }
                function_name(arguments);

Types of functions:-
*********************
1.named function :- function which is having a name and invoked with the same name.
2.anonymus function :-function which doesnot have  a name to declare and to invoke.
3.function expression:- anonymus function decalration is assigned to a variable 
    and invoked with the same variable.
4.Immediate invoke function expression(IIFE):-
    - once the function is created immediatley it should be invoked.
    - it can be executed only once.

5.Arrow function:-it is used to concise the normal function syntax.
syntax :-  ()=>{};
- arrow function is similar to anonymus function.

6.Higher order function:-A function which accepts another function as an arguments.

7.Callback function :- a function that is passed as an argument/value to higher order functions.

- closure:-closure is a memory where functions are bundled together/functions are nested each other
by giving accessability to the innermost function to access the variables of outer most function.


Note :- 
- current version of javascript is es14.
- es6 - is stable version
es - ECMA script
ECMA - european computer manufacturing association

what is return keyword?
-return keyword is used to return the expression,variables , values.
- return statment is also used to terminate/stop the execution.


Arrays :-
*********
- it is non-primitive data type.
- It is a collection of elements / multiple values.

syntax :-   let arr = [];


map() :- it is used to iterate values from the array.
        - if we return the value , map() method returns new copied array.


forEach() :- it is used to iterate the values from the array.
           - it returns "undefined".


what is object?
- Object is an entity which is having states(proeprties) and behviours.
- Object is used to store the data in the form key & value pairs.

syntax :-   let obj = {};

note:-  "this" - it is used to target current executing object.


JSON :- Javascript object notation.
- JSON is a lightweight technique of javascript used to transfer data/information from
        client to server and vice-versa.
        - except number it will store bot key and value pair inside the double quotes.

- JSON is always in the form of "string".


methods of json:-
1.JSON.stringfy() :- it is used to convert Javascript object into JSON object.
2.JSON.parse() :- it is used to convert JSON object into Javascript object.

Asynchrnous in javascript:-
***************************
- to perform multiple task in javascript.

1.setTimeout() :- it is a web api used to perform async operations at specified timeout.
syntax :-  setTimeout(Callbackfn , timeout);

2.setInterval():- it is a web api used to perform async operations at certain time interval.
syntax :-  setInterval(Callbackfn , timeout);


3.promise :- Promise is an object which represents eventual completion or failures of an async operations.

    states of promise:-
    1.pending state
    2.fulfilled state
    3.rejected state

syntax :-  let p =  new Promise((resolve , reject)=>{});

- the actual way of executing the promise is instance methods,
        1.then() :- it is used to execute fulfilled state
        2.catch() :- it is used to execute rejected state
        3.finally() :- once promise is settled it will print the value.

4.async & await
note :- by default , javascript is synchronous(single threaded).

